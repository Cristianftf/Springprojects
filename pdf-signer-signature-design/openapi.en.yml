openapi: 3.0.1
info:
  title: pdfsigner
  version: '1.0'
servers:
  - url: /
security:
  - default: []
paths:
  /:
    post:
      tags: [pdf]
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - pdf
                - pkcs12
                - options
              type: object
              properties:
                pdf:
                  type: string
                  description: >-
                    PDF file to be signed
                  format: binary
                pkcs12:
                  type: string
                  description: >-
                    Key container in format PKCS12 and with MIME type
                    `application/pkcs12` or `application/x-pkcs12`
                  format: binary
                signatureImage:
                  type: string
                  description: >-
                    Image file with MIME type `image/*` to be visible in the signature box
                  format: binary
                options:
                  type: string
                  description: >- 
                    File with MIME type `application/json` with the next options:
                    
                    ```
                    
                    {
                      "pkcs12FilePassword": "string",
                      "signerEntity?": "string",
                      "signerJobTitle?": "string",
                      "signatureWidth?": number,
                      "signatureHeight?": number.
                      "signaturePositionX?": number,
                      "signaturePositionY?": number,
                      "signatureDescription?": "string",
                      "signatureImageSize?": number,
                      "signatureImageRelativePositionX?": number,
                      "signatureImageRelativePositionY?": number.
                      "signatureDescriptionRelativePositionX?": number,
                      "signatureDescriptionRelativePositionY?": number,
                      "signatureFontSize": number
                    }
                    
                    ```
                    
                    `pkcs12FilePassword` is required and contains the password to unlock the `pkcs12`.<br>
                    `signerEntity` is optional and contain the name of the signer entity.<br>
                    `signerJobTitle` is optional and contain the name of the signer job.<br>
                    `signatureWidth` is optional and contain the `width` of the signature box.<br>
                    `signatureHeight` is optional and contain the `height` of the signature box.<br>
                    `signaturePositionX` is optional and contain the position `x` of the top left of the signature box.<br>
                    `signaturePositionY` is optional and contain the position `y` of the top left of the signature box.<br>
                    `signatureDescription` is optional and contain text of the signature box, accept markdown syntax.<br>
                    `signatureImageSize` is optional and contain the size of the image of the signature.<br>
                    `signatureImageRelativePositionX` is optional and contain the position `x` of the top left of the image inside the signature box.<br>
                    `signatureImageRelativePositionY` is optional and contain the position `y` of the top left of the image inside the signature box.<br>
                    `signatureDescriptionRelativePositionX` is optional and contain the position `x` of the top left of the description inside the signature box.<br>
                    `signatureDescriptionRelativePositionY` is optional and contain the position `y` of the top left of the description inside the signature box.<br>
                    `signatureFontSize` is optional and contain the font size of the signature.

                  format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
                description: Used only with `application/pdf` responses
                example: attachment; filename="name.pdf"
        '400':
          description: Bad Request
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /validate-pdf:
    post:
      tags: [pdf]
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - pdf
              type: object
              properties:
                pdf:
                  type: string
                  description: >-
                    PDF file to be validated
                  format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PdfValidationResponse"
        '400':
          description: Bad Request
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /validate-pkcs12:
    post:
      tags: [pkcs12]
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - pkcs12
                - password
              type: object
              properties:
                pkcs12:
                  type: string
                  description: >-
                    Key container in format PKCS12 and with MIME type
                    `application/pkcs12` or `application/x-pkcs12`
                  format: binary
                password:
                  type: string
                  description: >-
                    contains the password to unlock the `pkcs12`
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pkcs12ValidationResponse"
        '400':
          description: Bad Request
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /parse-pkcs12:
    post:
      tags: [pkcs12]
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - pkcs12
                - password
              type: object
              properties:
                pkcs12:
                  type: string
                  description: >-
                    Key container in format PKCS12 and with MIME type
                    `application/pkcs12` or `application/x-pkcs12`
                  format: binary
                password:
                  type: string
                  description: >-
                    contains the password to unlock the `pkcs12`
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pkcs12ParseResponse"
        '400':
          description: Bad Request
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
  /change-pkcs12-password:
    post:
      tags: [pkcs12]
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - pkcs12
                - oldPassword
                - newPassword
              type: object
              properties:
                pkcs12:
                  type: string
                  description: >-
                    Key container in format PKCS12 and with MIME type
                    `application/pkcs12` or `application/x-pkcs12`
                  format: binary
                oldPassword:
                  type: string
                  description: >-
                    contains the password to unlock the `pkcs12`
                newPassword:
                  type: string
                  description: >-
                    contains the password to unlock the new `pkcs12` of the response
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
components:
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://test.com'
          scopes: {}
  schemas:
    PdfValidationResponse:
      type: object
      properties:
        isValid:
          type: boolean
        hasWarnings:
          type: boolean
        verifiedAt:
          type: string
          format: date-time
        signatures:
          type: array
          items:
            $ref: "#/components/schemas/PdfSignatureValidationResult"
    PdfSignatureValidationResult:
      type: object
      properties:
        name:
          type: string
        isValid:
          type: boolean
        signedAt:
          type: string
          format: date-time
        caChain:
          type: array
          items:
            type: string
        errors:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        infoMessages:
          type: array
          items:
            type: string
    Pkcs12ValidationResponse:
      type: object
      properties:
        isValid:
          type: boolean
        message:
          type: string
    Pkcs12ParseResponse:
      type: object
      properties:
        isValid:
          type: boolean
        message:
          type: string
        notBefore:
          type: string
          format: date-time
        notAfter:
          type: string
          format: date-time
        subject:
          type: string
        issuer:
          type: string
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: true
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - testKey
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - 'http://pdfsigner.cubaface.svc.cluster.local:8080'
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - 'http://pdfsigner.cubaface.svc.cluster.local:8080'
  type: http
x-wso2-basePath: /pdfsigner/1.0
x-wso2-transports:
  - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
